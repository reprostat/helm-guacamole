global:
  imagePullSecrets: []
  defaultStorageClass: ""

nameOverride: ""

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled OPENLDAP  pods' Security Context
## @param podSecurityContext.fsGroup Set OPENLDAP  pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled OPENLDAP  containers' Security Context
## @param containerSecurityContext.runAsUser Set OPENLDAP  containers' Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set OPENLDAP  containers' Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: false
  runAsUser: 1001
  runAsNonRoot: true

## Configure extra options for liveness, readiness, and startup probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 10
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 10
startupProbe:
  enabled: true
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 30

updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: RollingUpdate

## guacd
daemon:
  image: 
    repository: guacamole/guacd
    tag: ""
    pullPolicy: IfNotPresent
  replicas: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
    behavior: {}
      ## scaleDown:
      ##  stabilizationWindowSeconds: 300
      ##  policies:
      ##   - type: Pods
      ##     value: 1
      ##     periodSeconds: 180
      ## scaleUp:
      ##   stabilizationWindowSeconds: 300
      ##   policies:
      ##   - type: Pods
      ##     value: 2
      ##     periodSeconds: 60
  port: 4822
  
  service:
    port: 4822

## guacamole
portal:
  image:
    repository: reprostat/guacamole-client
    tag: ""
    pullPolicy: Always
  replicas: 1
  resources:
    requests:
      memory: "1024Mi"
      cpu: "250m"
  ## Persist data to a persistent volume
  persistence:
    enabled: false
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "standard-singlewriter"
    # existingClaim: portal-pvc
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    storageClass: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
    behavior: {}
      ## scaleDown:
      ##  stabilizationWindowSeconds: 300
      ##  policies:
      ##   - type: Pods
      ##     value: 1
      ##     periodSeconds: 180
      ## scaleUp:
      ##   stabilizationWindowSeconds: 300
      ##   policies:
      ##   - type: Pods
      ##     value: 2
      ##     periodSeconds: 60
  ## @param extraVolumes Optionally specify extra list of additional volumes for the portal pod(s)
  ##
  extraVolumes: []
  ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the portal container(s)
  ##
  extraVolumeMounts: []
  ## @param sidecars Add additional sidecar containers to the portal pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  
  port: 8080
  
  service:
    port: 8080
  
  ingress:
    enabled: true
    annotations: {}
    className: nginx
    host: guacamole.local
    tls:
      enabled: false
      secretName: guacamole-tls
      
## At least one authentication method must be specified
## Authentication_priority corresponds to extention-priority 
## (see https://guacamole.apache.org/doc/gug/configuring-guacamole.html#initial-setup)
##
authentication:
  priority: []
##    - ldap
##    - oidc
##    - database
## For database authentication, <database.type>.enabled must be set to true.
## For external database, non-empty hostname MUST be provided.
## For internal database, hostname is ignored.
##  database:
##    type: postgres
##    hostname: "guacamole-postgresql"
##
## PostgreSQL chart configuration
##    image:
##      repository: postgres
##      tag: 17.6-alpine
##    resources:
##      requests:
##        cpu: 500m
##        memory: 512Mi      
##      limits:
##        cpu: 750m
##        memory: 768Mi
##    storage:
##      existingClaim: ""
##      annotations: {}
##      storageClass: longhorn-encrypted
##      size: 1Gi
##    postgresql:
##      parameters:
##        max_connections: 200
##    port: 5432 
##
##    database: "guacamole"
##    username: "guacamole"
##    password:
##      secret: "guacamole-db"
##      key: "userPassword"
##
##  ldap:
##    hostname: ldap.local
##    port: 389
##    encryptionMethod: starttls
##    tlsSecretname: guacamole-tls
##    bindSecret: guacamole-ldap
##    maxSearchResults: 1000
##    userBaseDN: ou=people,dc=example,dc=com
##    usernameAttribute: uid
##    memberAttribute: uniqueMember
##    memberAttributeType: dn
##    guacConfigBaseDN: ou=guacConfigs,ou=groups,dc=example,dc=com
##
##  oidc:
##    authorizationEndpoint: https://keycloak.example.com/realms/myorg/protocol/openid-connect/auth
##    jwksEndpoint: https://keycloak.example.com/realms/myorg/protocol/openid-connect/certs
##    issuer: https://keycloak.example.com/realms/myorg
##    clientId: guacamole
##    redirectUri: https://guacamole.example.com
##    usernameClaimType: preferred_username
##    groupsClaimType: groups
##    scope: "openid profile"

hostAliases: []
