global:
  imagePullSecrets: []
  defaultStorageClass: ""

# guacd
daemon:
  image: 
    repository: guacamole/guacd
    tag: ""
    pullPolicy: IfNotPresent
  replicas: 1
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
    behavior: {}
      # scaleDown:
      #  stabilizationWindowSeconds: 300
      #  policies:
      #   - type: Pods
      #     value: 1
      #     periodSeconds: 180
      # scaleUp:
      #   stabilizationWindowSeconds: 300
      #   policies:
      #   - type: Pods
      #     value: 2
      #     periodSeconds: 60
  port: 4822
  
  service:
    port: 4822

# guacamole
portal:
  image:
    repository: reprostat/guacamole
    tag: ""
    pullPolicy: Always
  replicas: 1
  resources:
    requests:
      memory: "1024Mi"
      cpu: "250m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
    behavior: {}
      # scaleDown:
      #  stabilizationWindowSeconds: 300
      #  policies:
      #   - type: Pods
      #     value: 1
      #     periodSeconds: 180
      # scaleUp:
      #   stabilizationWindowSeconds: 300
      #   policies:
      #   - type: Pods
      #     value: 2
      #     periodSeconds: 60
  port: 8080
  
  service:
    port: 8080
  
  ingress:
    enabled: true
    annotations: {}
    className: nginx
    host: guacamole.local
    tls:
      enabled: false
      secretName: guacamole-tls

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` with key `postgres-password` is provided
## @param postgresql.auth.username Name for a custom user to create
## @param postgresql.auth.password Password for the custom user to create
## @param postgresql.auth.database Name for a custom database to create
## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
## @param postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
##
# postgresql:
#   enabled: true
#   auth:
#     postgresPassword: ""
#     username: guacamole
#     password: ""
#     database: guacamole
#     existingSecret: guacamole-db
#     secretKeys:
#       adminPasswordKey: adminPassword
#       userPasswordKey: userPassword
#   backup:
#     cronjob:
#       storage:
#         size: 500Mi
#   enabled: true
#   image:
#     debug: true
#   primary:
#     initdb:
#       scriptsConfigMap: guacamole-postgresql-initdb
#     persistence:
#       size: 500Mi
#   readReplicas:
#     persistence:
#       size: 500Mi  

# At least one authentication method must be specified
# Authentication_priority corresponds to extention-priority 
# (see https://guacamole.apache.org/doc/gug/configuring-guacamole.html#initial-setup)
authentication:
  priority: []
#    - ldap
#    - oidc
#    - database
# For database authentication, <database.type>.enabled must be set to true.
# database:
#   type: postgres
# For internal database, connection parameters will be used from <database.type>.auth.
# For external database, connection parameters must be set here.
#   hostname: "guacamole-postgresql"
#   port: "5432"
#   database: "guacamole"
#   username: "guacamole"
#   password:
#     secret: "guacamole-db"
#     key: "userPassword"
#
#  ldap:
#    hostname: ldap.local
#    port: 389
#    encryptionMethod: starttls
#    tlsSecretname: guacamole-tls
#    bindSecret: guacamole-ldap
#    maxSearchResults: 1000
#    userBaseDN: ou=people,dc=example,dc=com
#    usernameAttribute: uid
#    memberAttribute: uniqueMember
#    memberAttributeType: dn
#    guacConfigBaseDN: ou=guacConfigs,ou=groups,dc=example,dc=com
#
#  oidc:
#    authorizationEndpoint: https://keycloak.example.com/realms/myorg/protocol/openid-connect/auth
#    jwksEndpoint: https://keycloak.example.com/realms/myorg/protocol/openid-connect/certs
#    issuer: https://keycloak.example.com/realms/myorg
#    clientId: guacamole
#    redirectUri: https://guacamole.example.com
#    usernameClaimType: preferred_username
#    groupsClaimType: groups
#    scope: "openid profile"

hostAliases: []
